!function(){var e={}.hasOwnProperty,t=function(t,o){function r(){this.constructor=t}for(var n in o)e.call(o,n)&&(t[n]=o[n]);return r.prototype=o.prototype,t.prototype=new r,t.__super__=o.prototype,t};this.Gmaps4Rails.Openlayers.Polyline=function(e){function o(e,t){var o,r,n,l,s,i,a,c,p,y,h,u;for(this.controller=t,this.controller._createPolylinesLayer(),i=[],h=0,u=e.length;u>h;h++)r=e[h],r===e[0]&&(a=r.strokeColor||this.controller.polylines_conf.strokeColor,c=r.strokeOpacity||this.controller.polylines_conf.strokeOpacity,p=r.strokeWeight||this.controller.polylines_conf.strokeWeight,o=r.clickable||this.controller.polylines_conf.clickable,y=r.zIndex||this.controller.polylines_conf.zIndex),null!=r.lat&&null!=r.lng&&(n=new OpenLayers.Geometry.Point(r.lng,r.lat),i.push(n));l=new OpenLayers.Geometry.LineString(i),s={strokeColor:a,strokeOpacity:c,strokeWidth:p},this.serviceObject=new OpenLayers.Feature.Vector(l,null,s),this.serviceObject.geometry.transform(new OpenLayers.Projection("EPSG:4326"),new OpenLayers.Projection("EPSG:900913")),this.controller.polylinesLayer.addFeatures([this.serviceObject])}return t(o,e),o.include(Gmaps4Rails.Interfaces.Basic),o.include(Gmaps4Rails.Openlayers.Shared),o.extend(Gmaps4Rails.Polyline.Class),o.extend(Gmaps4Rails.Configuration),o.prototype.isVisible=function(){return!0},o}(Gmaps4Rails.Common)}.call(this);